FORMAT: 1A
HOST: http://www.google.com

# Service API

+ Manage all services of SocialAPI backend
+ All verbs are restricted to ROLE_SUPERVISOR

# Group Services

** Service Resources API **

## Services Collection [/service/rest/service]

### Create a Service [POST]

+ Creation of a service

+ Request (application/json)

    + Headers
    
            token: the token of the currently connected user

    + Body
    
            {
                "title": "OFC", "version" : "1.0", uniqueDataKeys : ["email", "name"]
            }

+ Response 200 (application/json)

        { 
            "id": 1, "title": "OFC", "version" : "1.0", uniqueDataKeys : ["email", "name"]
        }

## Service by name [/service/rest/service/byname/{serviceName}]

### Get a service by its name [GET]

+ Parameters

    + serviceName (required, string, `super service`) ... The service name


+ Request

    + Headers
    
            token: the token of the currently connected user
           
+ Response 200 (application/json)

        { 
            "id": 1, "title": "OFC", "version" : "1.0", uniqueDataKeys : ["email", "name"]
        }
        
## Services [/service/rest/service/{service_id}]

+ Detail of a service

+ Parameters

    + id (required, number, `1`) ... Numeric `id` of the Service to perform action with.

### Retrieve a Service [GET]

+ Request

    + Headers
    
            token: the token of the currently connected user
           
+ Response 200 (application/json)
        
        {
            "id": 1, "title": "OFC", "version" : "1.0", uniqueDataKeys : ["email", "name"]
        }

### Remove a Service [DELETE]

+ Request

    + Headers
    
            token: the token of the currently connected user
           
+ Response 200 (application/json)

        {
            "result": "Service deleted"
        }

### Update a Service [PUT]

+ When updating a service, if a new data key is not unique, it will be not saved. No error will be thrown.

+ Request (application/json)

    + Headers
    
            token: the token of the currently connected user
           
    + Body

            { 
                "id":1, "title": "OFC", "version" : "1.1", uniqueDataKeys : ["email", "name", "avatar"]
            }
        
+ Response 200 (application/json)

        {
            "id":1, "title": "OFC", "version" : "1.1", uniqueDataKeys : ["email", "name"]
        }

## Services Collection [/service/rest/service/list?offset=0&count=5]

### List all service [GET]

+ Return all services of the component

+ Parameters

    + offset (required, number, `0`) ... First element of the list
    + count (required, number, `5`) ... Number of element for the list


+ Request

    + Headers
    
            token: the token of the currently connected user
           
+ Response 200 (application/json)

        {
            "data":
                [
                    {
                        "id":1, "title": "OFC", "version" : "1.0"
                    },
                    {
                        "id":2, "title": "buzzTV", "version" : "1.0"
                    }
                ],
            "nbElt": 2,
            "offset": 0,
            "nbTotal": 2
        }